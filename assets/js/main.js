(()=>{"use strict";const t="https://api-todolist.test",e="https://todolist.test";function s(t,e=!0){if("string"!=typeof t)throw new Error("Key must be a string");const s=sessionStorage.getItem(t);if(!s)return null;try{return e?JSON.parse(s):s}catch(t){throw new Error("Invalid JSON data in session storage")}}function o(t){if("string"!=typeof t)throw new Error("Key must be a string");sessionStorage.removeItem(t)}function n(){const t=new Date;return`${t.getFullYear()}-${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")} ${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}:${String(t.getSeconds()).padStart(2,"0")}`}function r(t,e,s=null,o={}){return new Promise(((n,r)=>{$.ajax({method:t,url:e,data:s,headers:o,success:t=>{n(t)},error:t=>{r(t)}})}))}function a(t){window.location.href=t}function i(t){const e={"rgb(187, 134, 252)":"pink","rgb(0, 191, 165)":"teal","rgb(61, 90, 254)":"indigo","rgb(255, 82, 82)":"red","rgb(100, 221, 23)":"green"}[t];var s,o;s=`'assets/images/icon/'fav-${e}.png`,$("#favIcon").attr("href",s),o=`assets/images/logo/logo-${e}.png`,$("#logo").attr("src",o),$("html").css("--theme-color",t)}function d(){return s("Authorization").token??null}function u(t="Oops...!",e="Something went wrong!"){Swal.fire({title:t,text:e,icon:"error",showCloseButton:!0})}const l=t;function c(t,e,s,o,n){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e||"string"!=typeof e)throw new Error("Task title must be provided and must be a string");if(!s||"string"!=typeof s)throw new Error("Task description must be provided and must be a string");if(!o||"string"!=typeof o)throw new Error("Task creation date must be provided and must be a string");if(!n||"string"!=typeof n)throw new Error("Tasks container ID must be provided and must be a string");$(`#${n}`).append(function(t,e,s,o){return`\n        <div class="task animate__bounceIn" data-task-id=${t} data-task-creation-date="${o}">\n          <div>\n            <div class="task-actions">\n              <span class="fas fa-edit"></span>\n              <span class="fa fa-check done-span"></span>\n              <span class="fas fa-times"></span>\n            </div>\n            <div class="task-detail">\n              <div class="task-title">${e}</div>\n\t\t\t  <br>\n              <div class="task-desc">${s}</div>\n            </div>\n\t\t\t<div class="task-info">\n\t\t\t    <i class="fas fa-info-circle"></i> Created: <span class="task-status" style="color: var(--theme-color);"> ${o} </span>\n\t\t\t</div>\n          </div>\n          <button class="fa fa-check done-btn" aria-hidden="true"></button>\n        </div>\n\t`}(t,e,s,o))}function m(t,e){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e||"string"!=typeof e)throw new Error("Tasks container ID must be provided and must be a string");return $(`#${e}`).find(`[data-task-id="${t}"]`)}function f(t,e,s){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e)throw new Error("Completed at time must be provided and must be a string");if(!s||"string"!=typeof s)throw new Error("Tasks container ID must be provided and must be a string");const o=m(t,s);o.addClass("done-task"),o.find(".task-title, .task-desc").addClass("strike");const n=o.find(".done-span"),r=o.find(".done-btn");n.removeClass("fa-check").addClass("fa-undo"),r.removeClass("fa-check").addClass("fa-undo"),o.find(".task-info").html(`<i class="fa-solid fa-circle-check"></i> Completed: <span style="color: var(--theme-color);">${e}</span>\n    `)}const p=$("#menu"),h=$("#task-edit-modal");let b=[];$(window).on("load",(function(){!function(){const t=$("#tasks-header h1"),e=$(".blink-caret");let s=0;const o=()=>{s<12?(t.text(t.text()+"Get it done!".charAt(s)),s++,setTimeout(o,100)):e.hide()};o()}(),s("theme-color")&&i(s("theme-color")),b=s("user"),b&&0!==b.length&&b.id||(o("user"),o("Authorization"),a(e+"/login.html")),function(t){if(!t||"number"!=typeof t)throw new Error("User ID must be provided and must be a number");return r("GET",l+"/get-tasks",null,{Authorization:d()})}(b.id).then((t=>{const e=JSON.parse(t);null!==e&&"object"==typeof e&&$.each(e,((t,e)=>{c(e.id,e.title,e.description,e.created_at,"todos"),e.status&&"completed"===e.status&&"0000-00-00 00:00:00"!==e.completed_at&&f(e.id,e.completed_at,"todos")}))})).catch((t=>{401===t.status?(o("Authorization"),o("user"),a(e+"/login.html")):(console.error(t),Swal.fire({title:"Oops...!",text:t.responseJSON.message||"Something went wrong...",icon:"error",showCloseButton:!0}))}))})),$(window).on("scroll",(()=>{const t=$("header");$(window).scrollTop()>59?t.addClass("sticky"):$(window).scrollTop()<51&&t.removeClass("sticky")})),$("#tasks-section").click((function(t){t.preventDefault();const e=$(t.target),s=e.closest(".task")||null,o=(i=s??null)&&"object"==typeof i?{taskId:i.data("task-id")??null,title:i.find(".task-title")?.text()?.trim()??null,description:i.find(".task-desc")?.text()?.trim()??null,creationDate:i.data("task-creation-date")?.trim()??null}:[],a=Number(o.taskId)??null;var i;if(e.hasClass("add-todo-btn")){const t=$("#task-input").val().trim(),e="Edit task for adding description...";t&&function(t,e,s){if(!t||"string"!=typeof t)throw new Error("Task title must be provided and must be a string");if(!e||"string"!=typeof e)throw new Error("Task description must be provided and must be a string");if(!s||"number"!=typeof s)throw new Error("User ID must be provided and must be a number");return r("POST",l+"/create-task",{title:t,description:e,status:"pending"},{Authorization:d()})}(t,e,b.id).then((s=>{const o=Number(s);o&&"number"==typeof o&&o>0&&c(o,t,e,n(),"todos")})).catch((t=>{console.error(t),u("Oops...!","Failed to add task!")}))}if(s&&o&&e.hasClass("fa-check")){const t=n();t&&"string"==typeof t&&"number"==typeof a&&a>0&&function(t,e){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e||"string"!=typeof e)throw new Error("Completed at time must be provided and must be a string");return r("PUT",l+`/update-task/${t}`,{completed_at:e,status:"completed"},{Authorization:d()})}(Number(a),t).then((e=>{f(a,t,"todos")})).catch((t=>{console.error(t),u("Oops...!","Failed to check task!")}))}s&&o&&e.hasClass("fa-undo")&&"number"==typeof a&&a>0&&o.creationDate&&"string"==typeof o.creationDate&&function(t){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");return r("PUT",l+`/update-task/${t}`,{completed_at:null,status:"pending"},{Authorization:d()})}(a).then((t=>{!function(t,e,s){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e||"string"!=typeof e)throw new Error("Created at time must be provided and must be a string");const o=m(t,s);o.removeClass("done-task"),o.find(".task-title, .task-desc").removeClass("strike");const n=o.find(".done-span"),r=o.find(".done-btn");n.removeClass("fa-undo").addClass("fa-check"),r.removeClass("fa-undo").addClass("fa-check"),o.find(".task-info").html(`<i class="fa-solid fa-circle-check"></i> Created: <span style="color: var(--theme-color);">${e}</span>`)}(a,o.creationDate,"todos")})).catch((t=>{console.error(t),u("Oops..!","Failed to uncheck task!")})),s&&o&&e.hasClass("fa-times")&&"number"==typeof a&&a>0&&function(t,e){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e||"number"!=typeof e)throw new Error("User ID must be provided and must be a number");return r("DELETE",l+`/remove-task/${t}`,null,{Authorization:d()})}(a,b.id).then((t=>{!function(t,e){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");const s=m(t,e);s&&$(`#${e}`).find(s).remove()}(a,"todos")})).catch((t=>{console.error(t),u("Oops...!","Failed to remove task!")})),s&&o&&e.hasClass("fa-edit")&&"number"==typeof a&&a>0&&o&&o.title&&o.description&&(h.toggleClass("show-modal"),h.find("#task-id").val(a),h.find("#task-title").val(o.title),h.find("#task-description").val(o.description))})),$("body div.container").click((function(t){const e=$(t.target);if(e.hasClass("close-button")&&(h.toggleClass("show-modal"),h.find("#task-id").removeAttr("value")),e.hasClass("save-modal")){const t=Number(h.find("#task-id").val())??null,e=h.find("#task-title").val()??null,s=h.find("#task-description").val()??null;"number"==typeof t&&t>0&&e&&s&&function(t,e,s,o){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e||"string"!=typeof e)throw new Error("Task title must be provided and must be a string");if(!s||"string"!=typeof s)throw new Error("Task description must be provided and must be a string");if(!o||"number"!=typeof o)throw new Error("User ID must be provided and must be a number");return r("PUT",`${l}/update-task/${t}`,{title:e,description:s},{Authorization:d()})}(t,e,s,b.id??null).then((o=>{if(!o)throw new Error("Unable to update the task");!function(t,e,s,o){if(!t||"number"!=typeof t)throw new Error("Task ID must be provided and must be a number");if(!e||"string"!=typeof e)throw new Error("Task title must be provided and must be a string");if(!s||"string"!=typeof s)throw new Error("Task description must be provided and must be a string");const n=m(t,o);n&&(n.find(".task-title").text(e),n.find(".task-desc").text(s))}(t,e,s,"todos"),h.toggleClass("show-modal"),h.find("#task-id").removeAttr("value")})).catch((t=>{console.error(t),u("Oops..!","Failed to update task!")}))}})),$(window).on("keyup",(t=>{t.preventDefault(),27===t.keyCode&&(h.hasClass("show-modal")&&h.removeClass("show-modal"),p.hasClass("show-menu")&&p.removeClass("show-menu"))})),$("#nav-container").click((s=>{const n=$(s.target);if((n.hasClass("menu-btn")||n.hasClass("bar"))&&p.addClass("show-menu"),n.hasClass("fa-times")){if(n.hasClass("color-menu-close"))return void $("#colors-menu").removeClass("show-menu");p.removeClass("show-menu")}if(n.hasClass("fa-sign-out")&&r("POST",t+"/log-out",null,{Authorization:d()}).then((t=>{if(!t)throw new Error("Unable to log you out!");o("Authorization"),o("user"),a(e+"/login.html")})).catch((t=>{console.error(t),u("Log-out Failed!")})),n.hasClass("fa-paint-roller")&&$("#colors-menu").toggleClass("show-menu"),n.hasClass("color-item")){const t=n.css("background-color")??"#bb86fc";i(t),l="theme-color",c=t,sessionStorage.setItem(l,JSON.stringify(c))}var l,c}))})();